<?xml version="1.0" encoding="UTF-8"?>
<project>
    <parent>
        <artifactId>gmp</artifactId>
        <groupId>com.wzjtech</groupId>
        <version>1.0-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <artifactId>smf_spa</artifactId>
    <packaging>war</packaging>

    <dependencies>
        <dependency>
            <groupId>com.wzjtech</groupId>
            <artifactId>cacheproxy</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>com.wzjtech</groupId>
            <artifactId>bmf-interfaces</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>

        <!--如果是同一个进程内调用，则不需要此jar包-->
        <dependency>
            <groupId>com.wzjtech</groupId>
            <artifactId>bmf</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>

        <dependency>
            <groupId>com.wzjtech</groupId>
            <artifactId>common</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>com.wzjtech</groupId>
            <artifactId>dmf</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>

        <!-- logback -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>1.7.10</version>
        </dependency>
        <!-- End -->


        <!-- spring -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-mongodb</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>jcl-over-slf4j</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-oxm</artifactId>
        </dependency>

        <dependency>
            <groupId>org.mongodb</groupId>
            <artifactId>mongo-java-driver</artifactId>
        </dependency>
        <!--end -->

        <!-- AspectJ-->
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjrt</artifactId>
        </dependency>

        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjtools</artifactId>
        </dependency>

        <!-- JavaEE json-->
        <dependency>
            <groupId>javax.json</groupId>
            <artifactId>javax.json-api</artifactId>
            <version>1.0</version>
        </dependency>

        <!-- below jars are for json view -->
        <!--  <dependency>
              <groupId>com.fasterxml.jackson.core</groupId>
              <artifactId>jackson-annotations</artifactId>
              <version>2.5.0</version>
          </dependency>-->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
        </dependency>
        <!-- <dependency>
             <groupId>com.fasterxml.jackson.core</groupId>
             <artifactId>jackson-databind</artifactId>
             <version>2.5.0</version>
         </dependency>-->

        <!-- Junit -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Servlet & Jsp -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet.jsp</groupId>
            <artifactId>javax.servlet.jsp-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet.jsp.jstl</groupId>
            <artifactId>javax.servlet.jsp.jstl-api</artifactId>
            <version>1.2.1</version>
            <scope>provided</scope>
        </dependency>

        <!-- 验证码-->
        <dependency>
            <groupId>com.google.code.kaptcha</groupId>
            <artifactId>kaptcha</artifactId>
            <version>2.3</version>
            <classifier>jdk15</classifier>
        </dependency>

        <!-- Jakarta Commons -->
        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
            <version>1.3</version>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>

        <!-- jcache-->
        <dependency>
            <groupId>javax.cache</groupId>
            <artifactId>cache-api</artifactId>
            <version>1.0.0-RC1</version>
        </dependency>
        <dependency>
            <groupId>org.jsr107.ri</groupId>
            <artifactId>cache-ri-impl</artifactId>
            <version>1.0.0-RC1</version>
        </dependency>

        <!-- for database -->
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>1.4.182</version>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.1.34</version>
        </dependency>
        <!--     <dependency>
                 <groupId>net.sourceforge.jtds</groupId>
                 <artifactId>jtds</artifactId>
                 <version>1.3.1</version>
             </dependency>-->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>4.3.7.Final</version>
        </dependency>
        <!--    <dependency>
                <groupId>postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>9.1-901-1.jdbc4</version>
            </dependency>-->
        <!--
                <dependency>
                    <groupId>com.thoughtworks.xstream</groupId>
                    <artifactId>xstream</artifactId>
                    <version>1.4.7</version>
                </dependency>-->
    </dependencies>

    <build>
        <finalName>${project.artifactId}</finalName>
        <!--<directory>${product.dir}/gmp/</directory>-->
        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-javadoc-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                    <!--<warSourceExcludes>WEB-INF/lib/log4j-${log4j.version}.jar</warSourceExcludes>-->
                    <!--<webappDirectory>../../product/</webappDirectory>-->
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>native2ascii-maven-plugin</artifactId>
                <version>1.0-alpha-1</version>
                <executions>
                    <execution>
                        <!--<phase>generate-locale</phase>-->
                        <goals>
                            <goal>native2ascii</goal>
                        </goals>
                        <configuration>
                            <encoding>UTF-8</encoding>
                            <!--设置为Resource根目录，如果设置内部的如locale目录，会直接将转码后的文件拷贝到classes根目录-->
                            <src>src/main/resources</src>
                            <dest>target/classes</dest>

                            <!--只转码以res_开头的资源文件-->
                            <includes>**/res_*.properties</includes>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>com.sun</groupId>
                        <artifactId>tools</artifactId>
                        <version>1.8.0</version>
                        <scope>system</scope>
                        <systemPath>${java.home}/../lib/tools.jar</systemPath>
                    </dependency>
                </dependencies>
            </plugin>

            <plugin>
                <!-- YUI Compressor Maven压缩插件 -->
                <groupId>net.alchim31.maven</groupId>
                <artifactId>yuicompressor-maven-plugin</artifactId>
                <version>1.3.0</version>
                <configuration>
                    <!-- 读取js,css文件采用UTF-8编码 -->
                    <encoding>UTF-8</encoding>
                    <!-- 不显示js可能的错误 -->
                    <jswarn>false</jswarn>
                    <!-- 若存在已压缩的文件，会先对比源文件是否有改动
                        有改动便压缩，无改动就不压缩 -->
                    <force>false</force>
                    <!-- 在指定的列号后插入新行 -->
                    <linebreakpos>-1</linebreakpos>
                    <!-- 压缩之前先执行聚合文件操作 -->
                    <preProcessAggregates>true</preProcessAggregates>
                    <!-- 压缩后保存文件后缀 -->
                    <suffix>.min</suffix>
                    <!--  &lt;!&ndash; 源目录，即需压缩的根目录 &ndash;&gt;
                      <sourceDirectory>${basedir}/mobile</sourceDirectory>
                      &lt;!&ndash; 压缩js和css文件 &ndash;&gt;
                      <includes>
                          <include>**/*.js</include>
                          <include>**/*.css</include>
                      </includes>
                      &lt;!&ndash; 以下目录和文件不会被压缩 &ndash;&gt;
                      <excludes>
                          <exclude>**/*.min.js</exclude>
                          <exclude>**/*.min.css</exclude>
                          <exclude>scripts/data/*.js</exclude>
                      </excludes>
                      &lt;!&ndash; 压缩后输出文件目录 &ndash;&gt;
                      <outputDirectory>${basedir}/mobile</outputDirectory>
                      &lt;!&ndash; 聚合文件 &ndash;&gt;
                      <aggregations>
                          <aggregation>
                              &lt;!&ndash; 合并每一个文件后插入一新行 &ndash;&gt;
                              <insertNewLine>true</insertNewLine>
                              &lt;!&ndash; 需合并文件的根文件夹 &ndash;&gt;
                              <inputDir>${basedir}/mobile/scripts</inputDir>
                              &lt;!&ndash; 最终合并的输出文件 &ndash;&gt;
                              <output>${project.build.directory}/${project.build.finalName}/scripts/app/app.js</output>
                              &lt;!&ndash; 把以下js文件合并成一个js文件，是按顺序合并的 &ndash;&gt;
                              <includes>
                                  <include>app/core.js</include>
                                  <include>app/mlmanager.js</include>
                                  <include>app/tmpl.js</include>
                                  <include>app/ui.js</include>
                              </includes>
                          </aggregation>
                      </aggregations>-->
                </configuration>
            </plugin>

        </plugins>
    </build>
</project>